{"version":3,"sources":["context.js","Posts.js","Pagination.js","index.js"],"names":["Context","createContext","ContextProvider","props","useState","totalPages","totalPosts","value","setValue","Provider","children","Posts","posts","setPosts","users","setUsers","useContext","setState","postsLoading","setPostsLoading","usersLoading","setUsersLoading","pageNum","match","params","useEffect","fetch","then","response","json","array","size","Math","floor","length","reduce","resultArray","item","index","chunkIndex","push","className","Spinner","animation","map","id","userId","title","body","Card","key","bg","style","padding","marginBottom","Header","margin","Body","Text","Link","href","find","user","email","name","PaginationPage","activePage","setActivePage","state","itemClass","linkClass","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","page","history","window","scroll","top","left","behavior","rootElement","document","getElementById","ReactDOM","render","Button","target","exact","path","to","component"],"mappings":"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","file":"static/js/main.769e8e93.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const Context = createContext();\n\nexport const ContextProvider = props => {\n  const [value, setValue] = useState({\n    totalPages: 0,\n    totalPosts: 0\n  });\n\n  return (\n    <Context.Provider value={[value, setValue]}>\n      {props.children}\n    </Context.Provider>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Context } from \"./context\";\nimport { Card, Spinner } from \"react-bootstrap\";\n\nconst chunk = (array, size) => {\n  return array.reduce((resultArray, item, index) => {\n    const chunkIndex = Math.floor(index / size);\n\n    if (!resultArray[chunkIndex]) {\n      resultArray[chunkIndex] = []; // start a new chunk\n    }\n\n    resultArray[chunkIndex].push(item);\n\n    return resultArray;\n  }, []);\n};\n\nconst Posts = props => {\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [state, setState] = useContext(Context);\n  const [postsLoading, setPostsLoading] = useState(true);\n  const [usersLoading, setUsersLoading] = useState(true);\n\n  const pageNum = props.match.params.pageNum;\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then(response => response.json())\n      .then(json => {\n        setState({\n          totalPages: Math.floor(json.length / 10),\n          totalPosts: json.length\n        });\n        setPosts(chunk(json, Math.floor(json.length / 10)));\n        setPostsLoading(false);\n      });\n\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(json => {\n        setUsers(json);\n        setUsersLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"row d-flex flex-column align-items-center posts\">\n      {!postsLoading ? (\n        posts[pageNum - 1].map(({ id, userId, title, body }) => {\n          return (\n            <Card\n              className=\"col-md-6\"\n              key={id}\n              bg=\"light\"\n              style={{ padding: 0, marginBottom: \"30px\" }}\n            >\n              <Card.Header>\n                <h5 style={{ margin: 0 }}>{title}</h5>\n              </Card.Header>\n              <Card.Body>\n                <Card.Text>{body}</Card.Text>\n                {!usersLoading ? (\n                  <Card.Link\n                    href={`mailto:${\n                      users.find(user => user.id === userId).email\n                    }`}\n                  >\n                    {users.find(user => user.id === userId).name}\n                  </Card.Link>\n                ) : (\n                  <Spinner animation=\"border\" />\n                )}\n              </Card.Body>\n            </Card>\n          );\n        })\n      ) : (\n        <Spinner animation=\"border\" />\n      )}\n    </div>\n  );\n};\n\nexport default Posts;\n","import React, { useContext, useState } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport { Context } from \"./context\";\n\nconst PaginationPage = props => {\n  const [activePage, setActivePage] = useState(props.match.params.pageNum);\n  const [state] = useContext(Context);\n  return (\n    <div id=\"pagination\" className=\"row d-flex justify-content-center\">\n      <Pagination\n        className=\"pagination\"\n        itemClass=\"page-item\"\n        linkClass=\"page-link\"\n        activePage={activePage}\n        itemsCountPerPage={10}\n        totalItemsCount={state.totalPosts}\n        pageRangeDisplayed={5}\n        onChange={page => {\n          setActivePage(page);\n          props.history.push(`/${page}`);\n          window.scroll({\n            top: 0,\n            left: 0,\n            behavior: \"smooth\"\n          });\n        }}\n      />\n    </div>\n  );\n};\n\n// const Pagination = () => {\n//   const [state, setState] = useContext(Context);\n//   const arr = new Array(state).fill(null).map((x, i) => i + 1);\n\n//   const [isLoading, setIsLoading] = useState(true);\n\n//   useEffect(() => {\n//     setTimeout(setIsLoading(false), 1000);\n//   }, []);\n\n//   return (\n//     <div id=\"pagination\">\n//       {isLoading ? (\n//         <span>Loading...</span>\n//       ) : (\n//         arr.map(page => {\n//           return (\n//             <NavLink to={`/${page}`} key={page}>\n//               {page}\n//             </NavLink>\n//           );\n//         })\n//       )}\n//     </div>\n//   );\n// };\n\nexport default PaginationPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\nimport { ContextProvider } from \"./context\";\nimport \"./App.sass\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Posts from \"./Posts\";\nimport PaginationPage from \"./Pagination\";\n\nconst App = () => {\n  return (\n    <div className=\"App\" style={{ padding: \"30px\" }}>\n      <ContextProvider>\n        <Router>\n          <h1 className=\"text-center\" style={{ marginBottom: \"60px\" }}>\n            Posts from{\" \"}\n            <Button target=\"_blank\" href=\"https://jsonplaceholder.typicode.com\">\n              jsonplaceholder\n            </Button>\n          </h1>\n          <Route exact path=\"/\">\n            <Redirect to=\"/1\" />\n          </Route>\n          <Route path=\"/:pageNum\" component={Posts} />\n          <Route component={PaginationPage} />\n        </Router>\n      </ContextProvider>\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}